// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  products    Product[]
  brands      Brand[]
  createdAt   DateTime @default(now())
}

model Product {
  id         Int       @id @default(autoincrement())
  name       String
  price      Int
  cost       Int      @default(0)
  stock      Int
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  brandId    Int?
  brand      Brand?    @relation(fields: [brandId], references: [id])
  createdAt  DateTime  @default(now())
  transactionItems TransactionItem[]
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  products  Product[]
  createdAt DateTime  @default(now())
}

model Transaction {
  id         Int             @id @default(autoincrement())
  total      Int
  paid       Int
  change     Int?
  createdAt  DateTime        @default(now())
  items      TransactionItem[]
}

model TransactionItem {
  id            Int          @id @default(autoincrement())
  productId     Int?
  name          String?
  price         Int?
  quantity      Int
  subtotal      Int
  transactionId Int
  product       Product?      @relation(fields: [productId], references: [id], onDelete: SetNull)
  transaction   Transaction   @relation(fields: [transactionId], references: [id])
}

/// Simple key/value settings table for app configuration (store name, contact, printer, etc.)
model Setting {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String
}
